import config from 'config'
import {Markup} from "telegraf";
import {subscribePay} from "../db.js";

const ytoken = config.get('Y_KASSA_TOKEN')
const price = config.get('ONE_PRICE')
const supportMessage = config.get('SUPPORT_MESSAGE')

const getInvoice = (id) => {
    const invoice = {
        chat_id: id,
        title: '–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏',
        description: '–ü–æ–¥–ø–∏—Å–∫–∞ Translator BOT ‚Äî 30 –¥–Ω–µ–π',
        payload: {
            date: new Date(),
            user_id: id,
            provider: '–Æ-–∫–∞—Å—Å–∞',
            bot: 'Translator_Bot'
        },
        provider_token: ytoken,
        start_parameter: 'pay',
        currency: 'RUB',
        prices: [{ label: '‚ÇΩ', amount: price * 100 }],

    }

    return invoice
}

export const handlePay = async (ctx) => {
    try {
        return ctx.replyWithInvoice(getInvoice(ctx.from.id))
    }catch (e) {
        await ctx.reply(`–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤—Ä–µ–º–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n` +
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –±–æ—Ç–∞')
        await ctx.reply(supportMessage)
    }
}

export const successfulPayment = async (ctx) => {
    await subscribePay(ctx.from.id, ctx.from.first_name,30)
    await ctx.reply('–ü–æ–¥–ø–∏—Å–∫–∞ –æ–ø–ª–∞—á–µ–Ω–∞ ‚úÖ \n\n ' +
        '–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ',
        Markup.inlineKeyboard([Markup.button.callback(`üë§ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å`, 'profile')]))
}