import { Markup } from 'telegraf'
import config from 'config'
import { unlink } from 'fs/promises'

const price = config.get('ONE_PRICE')

export async function removeFile(path) {
    try {
        await unlink(path)
    } catch (e) {
        console.log('Error while removing file', e.message)
    }
}

export function nowTimeSecond() {
    const currentDate = new Date()
    return Math.floor(currentDate.getTime() / 1000)
}

export function convertSeconds(totalSeconds) {
    const days = Math.floor(totalSeconds / (60 * 60 * 24))
    const hours = Math.floor((totalSeconds % (60 * 60 * 24)) / (60 * 60))
    const minutes = Math.floor((totalSeconds % (60 * 60)) / 60)

    return `–ê–∫—Ç–∏–≤–Ω–∞ ‚úÖ
–û—Å—Ç–∞–ª–æ—Å—å: ${days} –¥–Ω–µ–π, ${hours}—á–∞—Å–æ–≤, ${minutes}–º–∏–Ω—É—Ç`
}

export function addSubSeconds(days) {
    return nowTimeSecond() + (days * 24 * 60 * 60)
}

export function dayToSeconds(days) {
    return days * 24 * 60 * 60
}

export function subscribeDay(totalSeconds) {
    const now = nowTimeSecond()
    if(totalSeconds > now) {
        const day = Math.floor((Number(totalSeconds) - now) / (60 * 60 * 24))
        return `‚úÖ ${day}–¥.`
    } else {
        return '‚ùå'
    }
}

export async function replaySubscribe(ctx) {
    return await ctx.replyWithMarkdown(`*–ë–æ—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω*
    
–°–µ–π—á–∞—Å –ø–æ–¥–ø–∏—Å–∫–∞ ‚Äî –ù–µ –∞–∫—Ç–∏–≤–Ω–∞ üò¢
        
–¢—ã –º–æ–∂–µ—à—å –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –±–æ—Ç–∞ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!`,
        Markup.inlineKeyboard([Markup.button.callback(`üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ‚Äî –∑–∞ ${price}‚ÇΩ`, 'pay')])
    )
}